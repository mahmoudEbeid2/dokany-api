generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(cuid())
  user_name           String    @unique
  f_name              String
  l_name              String
  email               String    @unique
  phone               String
  city                String
  governorate         String
  country             String
  role                String
  subdomain           String?   @unique
  payout_method       String?
  password            String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  logo                String?
  profile_imge        String?
  theme_id            String?

  // Relations
  theme      Theme?     @relation(fields: [theme_id], references: [id])
  products   Product[]
  payouts    Payout[]
  categories Category[]
  coupons    Coupon[]
  customers  Customer[]
}

model Customer {
  id                  String    @id @default(cuid())
  user_name           String
  f_name              String
  l_name              String
  email               String
  phone               String
  city                String
  governorate         String
  country             String
  password            String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  seller_id           String

  // Relations
  seller    User       @relation(fields: [seller_id], references: [id])
  orders    Order[]
  cart      Cart[]
  favorites Favorite[]
  reviews   Review[]
}

model Product {
  id          String  @id @default(cuid())
  title       String
  description String
  price       Float
  discount    Float
  stock       Int
  status      String
  seller_id   String
  category_id String?

  // Relations
  seller    User       @relation(fields: [seller_id], references: [id])
  category  Category?  @relation(fields: [category_id], references: [id])
  images    Image[]
  orders    Order[]
  coupons   Coupon[]
  reviews   Review[]
  cart      Cart[]
  favorites Favorite[]
}

model Image {
  id         String @id @default(cuid())
  product_id String
  image      String

  product Product @relation(fields: [product_id], references: [id])
}

model Order {
  id                String   @id @default(cuid())
  quantity          Int
  total_price       Float
  order_status      String
  payment_reference String
  coupon_id         String?
  product_id        String
  customer_id       String
  date              DateTime @default(now())

  customer Customer @relation(fields: [customer_id], references: [id])
  product  Product  @relation(fields: [product_id], references: [id])
  coupon   Coupon?  @relation(fields: [coupon_id], references: [id])
}

model Coupon {
  id              String   @id @default(cuid())
  code            String   @unique
  discount_value  Float
  expiration_date DateTime
  product_id      String
  seller_id       String

  product Product @relation(fields: [product_id], references: [id])
  seller  User    @relation(fields: [seller_id], references: [id])
  orders  Order[]
}

model Payout {
  id            String   @id @default(cuid())
  amount        Float
  status        String
  payout_method String
  seller_id     String
  date          DateTime @default(now())

  seller User @relation(fields: [seller_id], references: [id])
}

model Theme {
  id            String @id @default(cuid())
  name          String
  preview_image String

  users User[]
}

model Cart {
  id          String @id @default(cuid())
  quantity    Int
  customer_id String
  product_id  String

  customer Customer @relation(fields: [customer_id], references: [id])
  product  Product  @relation(fields: [product_id], references: [id])
}

model Favorite {
  id          String @id @default(cuid())
  customer_id String
  product_id  String

  customer Customer @relation(fields: [customer_id], references: [id])
  product  Product  @relation(fields: [product_id], references: [id])
}

model Review {
  id          String @id @default(cuid())
  comment     String
  rating      Int
  customer_id String
  product_id  String

  customer Customer @relation(fields: [customer_id], references: [id])
  product  Product  @relation(fields: [product_id], references: [id])
}

model Category {
  id        String @id @default(cuid())
  name      String
  image     String
  seller_id String

  seller   User      @relation(fields: [seller_id], references: [id])
  products Product[]
}
